API Overview

--Account's & Login--
## User Registration ##
*Terminology change
*signup - signup a first email address to register with
*register - the process of actually making an account and final step of signing up the first email
*portfolio - school & work of a <User>, has a title field to label how
Citation relates eg. "Education : http://cs.purdue.edu"

- signup( email ) returns ClaimToken 
	- Sends "New User" message to email with ClaimToken

- register( ClaimToken, Name, Password, PasswordVerify )
	- Creates a new <User> with Name if Password==PasswordVerify
	- TODO: Some kind of min password length

- recoverPassword( email ) returns RecoverToken
	- Sends a new RecoverToken to <email> if email is registered
	- Similar to register without the "name" form fields, could just re-use

- login( email, password ) returns Session
	- Must be valid combo
	- Session will go stale (expire) after a certain amount of time.

- logout( Session )
	- Expires session immediately 
	
- addEmail( Session, email ) 
	- Requires a valid session
	- Adds email to <User>
	- Merges auto-created <User> with Session.User
	
- removeEmail( Session, email )
	- Requires a valid session
	- Removes email from the <User> list of emails
	- <TrustEdge>'s are NOT lost, they continue to trust the same <User>
	
- addToPortfolio( Session, Citation )
	- Requires a valid session
	- Adds the citation to the <Users>'s portfolio
	
- removeFromPortfolio( Session, Citation )
	- Requires a valid session
	- Removes the citation from the <Users>'s portfolio

- viewPortfolio( email ) returns Citation[]
	- Returns list of Citations associated with <User>'s portfolio


--Authority Network--

- trust( Session, email, Subject, Citations[] ) returns TrustEdge
	- Requires a valid session
	- Creates a <TrustEdge> from Session.User to <email>
	- Satisfies: I trust <email> about <Subject> for these <reasons[]>
	  statement
	- TODO: If <email> is not registered, prompt for invitation into network
	- At least one Citation is required, you wouldn't trust someone for no
	  reason

- untrust( Session, TrustEdge )
	- Requires a valid Session
	- Requires a <TrustEdge> be present

- updateCitations( Session, TrustEdge, Citations[] )
	- Requires a valid session
	- Strait replace old citations on <TrustEdge> with new Citations[]
	- Must be none empty list of Citations[]

- viewSubjectiveNetwork( Session, Subject, threshold ) returns SubjectiveEdge[]
	- Requires a valid session
	- Walks trust network, scoring peers on <Subject> returning edges above threshold
	- Threshold can range from 0 to 1000

- viewTrustNetwork( email ) returns TrustEdge[]
	- Returns all trusted edges for that user if exists

-- Class#TrustEdge
	from: <User>
	to: <User>
	about: <Subject>
	reasons: Citations[]

-- Class#SubjectiveEdge
	to:   <User>
	about: <Subject>
	score: <SubjectiveScore> - This score subjective and calculated on demand
	for the current Session.User based on Subject's and graph properties.

-- Class#Citation
	dateCreated
	String description //Human readble description for this citation, can be blank(?)
	String resource //Must be non-empty, could be a Url class instead but
	we'll see
